1     						/** @file mdl_code_prj_os_interface.a
2     						 *
3     						 *  This file defines the data structures necessary for a module that fits into
4     						 *  the Cirrus Logic OS Framework.
5     						 */
6     						.include .strcat (_COMMON_INC_PATH_, "macros.h")
6      >> open include file: C:/CirrusDSP/CS48L2X/common/inc/macros.h
1+    						    .if !defined(_MCT_MACROS_H_)
2+    						
466+  						    .list on
467+  						
468+  						#------------------------------------------------------------------
469+  						# macros to support patching a jump table function. The macros assume
470+  						# that x0 contains the current value of the jump table entry.
471+  						#------------------------------------------------------------------
472+  						
473+  						    .macro
474+  						    PATCH_JTABLE %originalFunctionName,%newFunctionName
475+  						    .public %originalFunctionName%&_patched
476+  						%originalFunctionName%&_patched .equ 1    #duplicate patches of the same function should cause an error 
477+  						    lo16(x0) = (%newFunctionName)
478+  						    pmem[%originalFunctionName] = x0
479+  						    .endm
480+  						
481+  						    .macro
482+  						    UNDO_PATCH_JTABLE %OriginalFunctionName
483+  						    lo16(x0) = (%OriginalFunctionName)
484+  						    pmem[%OriginalFunctionName%&_i] = x0
485+  						    .endm
486+  						    
487+  						    .macro
488+  						    PATCH_JTABLE_OS_HD_LRAM_INIT %newFunctionName,%originalFunctionName
489+  						    .if !defined (_os_hd_a_l_jmp_tbl_patches_)
490+  						    .public %originalFunctionName%&_patched
491+  						%originalFunctionName%&_patched .equ 1    #duplicate patches of the same function should cause an error 
492+  						    .else
493+  						        .dw (%newFunctionName), %originalFunctionName
494+  						    .endif
495+  						    .endm
496+  						    
497+  						    .macro
498+  						    PATCH_2JTABLE_OS_HD_LRAM_INIT %newFunctionName,%originalFunctionName1,%originalFunctionName2
499+  						    .if !defined (_os_hd_a_l_jmp_tbl_patches_)
500+  						    .public %originalFunctionName1%&_patched
501+  						    .public %originalFunctionName2%&_patched
502+  						%originalFunctionName1%&_patched .equ 1    #duplicate patches of the same function should cause an error    
503+  						%originalFunctionName2%&_patched .equ 1    #duplicate patches of the same function should cause an error    
504+  						    .else
505+  						        .dw (%newFunctionName), %originalFunctionName1
506+  						        .dw (%newFunctionName), %originalFunctionName2
507+  						    .endif
508+  						    .endm
509+  						    
510+  						    .macro
511+  						    PATCH_JTABLE_OS_DC %originalFunctionName,%newFunctionName
512+  						    .if defined (OS_DC)
513+  						    .public %originalFunctionName%&_patched
514+  						%originalFunctionName%&_patched .equ 1    #duplicate patches of the same function should cause an error 
515+  						    .endif
516+  						    lo16(x0) = (%newFunctionName)
517+  						    pmem[%originalFunctionName] = x0
518+  						    .endm
519+  						    
520+  						    .macro
521+  						    PATCH_JTABLE_OS_EGG_OS_DC %originalFunctionName,%newJtableName,%newJtableLength
522+  						    .if defined (OS_EGG)
523+  						    do_patch (%newJtableName), %newJtableLength
524+  						    .endif
525+  						    .if defined (OS_DC)
526+  						    .public %originalFunctionName%&_patched
527+  						%originalFunctionName%&_patched .equ 1    #duplicate patches of the same function should cause an error 
528+  						    .endif
529+  						    .endm
530+  						    
531+  						    .macro
532+  						    PATCH_JTABLE_OS_EGG_OK_NO_OS_DC %originalFunctionName,%newJtableName,%newJtableLength
533+  						    .if defined (OS_EGG)
534+  						    do_patch (%newJtableName), %newJtableLength
535+  						    .endif
536+  						    .endm
537+  						    
538+  						    .macro
539+  						    PATCH_2JTABLE_OS_EGG_OS_DC  %originalFunctionName1,%originalFunctionName2,%newJtableName,%newJtableLength
540+  						    .if defined (OS_EGG)
541+  						    do_patch (%newJtableName), %newJtableLength
542+  						    .endif
543+  						    .if defined (OS_DC)
544+  						    .public %originalFunctionName1%&_patched
545+  						    .public %originalFunctionName2%&_patched
546+  						%originalFunctionName1%&_patched .equ 1    #duplicate patches of the same function should cause an error    
547+  						%originalFunctionName2%&_patched .equ 1    #duplicate patches of the same function should cause an error    
548+  						    .endif
549+  						    .endm
550+  						    
551+  						    .macro
552+  						    PATCH_JTABLE_USE_LAST_X0 %originalFunctionName
553+  						    .public %originalFunctionName%&_patched
554+  						%originalFunctionName%&_patched .equ 1    #duplicate patches of the same function should cause an error 
555+  						    pmem[%originalFunctionName] = x0
556+  						    .endm
557+  						    
558+  						    .macro
559+  						    PATCH_2JTABLE %originalFunctionName1,%originalFunctionName2,%newFunctionName
560+  						    .public %originalFunctionName1%&_patched
561+  						    .public %originalFunctionName2%&_patched
562+  						%originalFunctionName1%&_patched .equ 1    #duplicate patches of the same function should cause an error    
563+  						%originalFunctionName2%&_patched .equ 1    #duplicate patches of the same function should cause an error    
564+  						    lo16(x0) = (%newFunctionName)
565+  						    pmem[%originalFunctionName1] = x0
566+  						    pmem[%originalFunctionName2] = x0
567+  						    .endm
568+  						    
569+  						#-----------------------------------------------------------------
570+  						# macros to support defining lables if in RAM
571+  						# and not labled if in ROM
572+  						#-----------------------------------------------------------------
573+  						    .macro 
574+  						%lable  .rom_no_label  
575+  						    .if .substr(.classname($),.strlen(.classname($))-2)="ROM"
576+  						    .else
577+  						%lable
578+  						    .endif
579+  						        .endm
580+  						    
581+  						#-----------------------------------------------------------------
582+  						# macro to support reserving space during ROM build 
583+  						# and download initialization during RAM build
584+  						#-----------------------------------------------------------------
585+  						    .macro 
586+  						        .dw_ram_bss_rom %initialValue  
587+  						    .if defined (_RAM_BUILD_) 
588+  						     .dw %initialValue  
589+  						    .else
590+  						     .bss 1
591+  						    .endif
592+  						        .endm
593+  						    
594+  						#-----------------------------------------------------------------
595+  						# macro to support reserving space during build under OS_DC
596+  						# and download initialization during build under OS_EGG
597+  						#-----------------------------------------------------------------
598+  						    .macro 
599+  						        .dw_egg_bss_dc %initialValue  
600+  						    .if defined (OS_EGG) 
601+  						     .dw %initialValue  
602+  						    .endif
603+  						    .if defined (OS_DC) 
604+  						     .bss 1
605+  						    .endif
606+  						        .endm
607+  						    
608+  						    .endif
609+  						    
610+   >> end of include file: C:/CirrusDSP/CS48L2X/common/inc/macros.h
610+   >> continuing with file: D:/ra207_2015/aadsp2/mdl_code_prj/src/mdl_code_prj_os_interface.a
7     						.include "mdl_code_prj_module.h"
7      >> open include file: D:/ra207_2015/aadsp2/mdl_code_prj/gen/inc/mdl_code_prj_module.h
1+    						/* This file is automatically generated by CLIDE.
2+    						 *
3+    						 * Module ID is unique identifier used in Cirrus Logic framework.
4+    						 */
5+    						 
6+    	 0074				mdl_code_prj_MODULEID .equ 0x74       # 0x70 - 0x7F are reserved for custom modules
7+     >> end of include file: D:/ra207_2015/aadsp2/mdl_code_prj/gen/inc/mdl_code_prj_module.h
7+     >> continuing with file: D:/ra207_2015/aadsp2/mdl_code_prj/src/mdl_code_prj_os_interface.a
8     						
9     						#====================================================================
10    						# Declare the MIF for this module. It needs to be public so that it 
11    						# can be referenced in the ODT definition in another source file.
12    						# Also need to declare a public symbol for the module ID for this module
13    	 0000					.public X_BY_mdl_code_prj_MIF, mdl_code_prj_MODULEID
14    						
15    	 0000					.public mdl_code_prj_mif
16    						
17    						mdl_code_prj_mif	.ydata_ovly
17     >> start of macro: .ydata_ovly
1+    						            seg_single mdl_code_prj_mif, "Y_OVLY", Y_OVLY
1+     >> start of macro: seg_single
1+    						  .if ( "mdl_code_prj_mif" != "" ) & defined( ___SegStart_Y_OVLY_mdl_code_prj_mif )
2+    						mdl_code_prj_mif    segment
3+    						  .else 
4+    						mdl_code_prj_mif    segment "Y_OVLY"
5+    						    .if "mdl_code_prj_mif" != ""
6+    	 0000				___SegStart_Y_OVLY_mdl_code_prj_mif
7+    						    .endif 
8+    						  .endif 
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .ydata_ovly
18    						#
19    						# use macros to declare the MIF structure. The macros ensure that the 
20    						# data structure is properly constructed
21    						#	
22    	 0000				X_BY_mdl_code_prj_MIF:
23    	 0000					.extern mdl_code_prj_HOST_MCV
24    						 MIF_BEGIN
24     >> start of macro: MIF_BEGIN
1+    						    .if ""!=""
2+    						:
3+    						    .endif
4+    	 0000				__External_MCV_X__ .set 0
5+    	 0000				__External_MCV_Y__ .set 0
6+    	 0000				__External_MCT__ .set 0
7+    	 0000				__Internal_MCV_X__ .set 0
8+    	 0000				__Internal_MCV_Y__ .set 0
9+    	 0000				__Internal_MCT__ .set 0
10+    >> end of macro: MIF_BEGIN
25    						  EXT_MCV_Y    mdl_code_prj_HOST_MCV
25     >> start of macro: EXT_MCV_Y
1+    	 0000				__External_MCV_Y__ .set mdl_code_prj_HOST_MCV
2+     >> end of macro: EXT_MCV_Y
26    						  EXT_MCT      mct
26     >> start of macro: EXT_MCT
1+    	 0000				__External_MCT__ .set mct
2+     >> end of macro: EXT_MCT
27    						 MIF_END
27     >> start of macro: MIF_END
1+    	 0000				    .dw __External_MCV_Y__
	 0000	 00000000	 
2+    	 0001				    .dw __External_MCT__
	 0001	 00000000	 
3+    	 0002				    .dw __External_MCV_X__
	 0002	 00000000	 
4+    	 0003				    .dw 0
	 0003	 00000000	 
5+    	 0004				    .dw __Internal_MCV_Y__
	 0004	 00000000	 
6+    	 0005				    .dw __Internal_MCT__
	 0005	 00000000	 
7+    	 0006				    .dw __Internal_MCV_X__
	 0006	 00000000	 
8+    	 0007				    .dw 0
	 0007	 00000000	 
9+     >> end of macro: MIF_END
28    						
29    						#
30    						# create the MCT (Module Call Table)
31    						# The symbols for the entry points are assumed to be external to this
32    						# source file, hence the .extern directives.
33    						#
34    						# To remove any particular entry point, just comment out or remove
35    						# that line in the MCT structure. Ordering of the entry points is not
36    						# important -- the macro ensures that the order expected by the OS is
37    						# followed.
38    						#
39    						mdl_code_prj_MCT	.ydata_ovly
39     >> start of macro: .ydata_ovly
1+    						            seg_single mdl_code_prj_MCT, "Y_OVLY", Y_OVLY
1+     >> start of macro: seg_single
1+    						  .if ( "mdl_code_prj_MCT" != "" ) & defined( ___SegStart_Y_OVLY_mdl_code_prj_MCT )
2+    						mdl_code_prj_MCT    segment
3+    						  .else 
4+    						mdl_code_prj_MCT    segment "Y_OVLY"
5+    						    .if "mdl_code_prj_MCT" != ""
6+    	 0000				___SegStart_Y_OVLY_mdl_code_prj_MCT
7+    						    .endif 
8+    						  .endif 
9+    							#RememberSegmentType
10+    >> end of macro: seg_single
2+     >> end of macro: .ydata_ovly
40    	 0000					.extern X_S_mdl_code_prj_PreKickstart,X_S_mdl_code_prj_PostKickstart,X_S_mdl_code_prj_Timer,X_S_mdl_code_prj_Frame
41    	 0000					.extern X_S_mdl_code_prj_Brick,X_S_mdl_code_prj_PreMalloc,X_S_mdl_code_prj_PostMalloc,X_S_mdl_code_prj_Background
42    	 0000				mct:
43    						 MCT_BEGIN
43     >> start of macro: MCT_BEGIN
1+    						    .if ""!=""
2+    						:
3+    						    .endif
4+    	 0000				__prekickEP__ .set 0
5+    	 0000				__postkickEP__ .set 0
6+    	 0000				__timerEP__ .set 0  
7+    	 0000				__frameEP__ .set 0
8+    	 0000				__blockEP__ .set 0
9+    	 0000				__afapEP__ .set 0
10+   	 0000				__backgroundEP__ .set 0
11+   	 0000				__postmallocEP__ .set 0
12+   	 0000				__premallocEP__ .set 0
13+    >> end of macro: MCT_BEGIN
44    						  PREKICK      X_S_mdl_code_prj_PreKickstart
44     >> start of macro: PREKICK
1+    	 0000				__prekickEP__ .set X_S_mdl_code_prj_PreKickstart
2+     >> end of macro: PREKICK
45    						  POSTKICK     X_S_mdl_code_prj_PostKickstart
45     >> start of macro: POSTKICK
1+    	 0000				__postkickEP__ .set X_S_mdl_code_prj_PostKickstart
2+     >> end of macro: POSTKICK
46    						  TIMER        X_S_mdl_code_prj_Timer
46     >> start of macro: TIMER
1+    	 0000				__timerEP__ .set X_S_mdl_code_prj_Timer
2+     >> end of macro: TIMER
47    						  FRAME        X_S_mdl_code_prj_Frame
47     >> start of macro: FRAME
1+    	 0000				__frameEP__ .set X_S_mdl_code_prj_Frame
2+     >> end of macro: FRAME
48    						  BLOCK        X_S_mdl_code_prj_Brick
48     >> start of macro: BLOCK
1+    	 0000				__blockEP__ .set X_S_mdl_code_prj_Brick
2+     >> end of macro: BLOCK
49    						  PREMALLOC    X_S_mdl_code_prj_PreMalloc
49     >> start of macro: PREMALLOC
1+    	 0000				__premallocEP__ .set X_S_mdl_code_prj_PreMalloc
2+     >> end of macro: PREMALLOC
50    						  POSTMALLOC   X_S_mdl_code_prj_PostMalloc
50     >> start of macro: POSTMALLOC
1+    	 0000				__postmallocEP__ .set X_S_mdl_code_prj_PostMalloc
2+     >> end of macro: POSTMALLOC
51    						  BACKGROUND   X_S_mdl_code_prj_Background 
51     >> start of macro: BACKGROUND
1+    	 0000				__backgroundEP__ .set X_S_mdl_code_prj_Background
2+     >> end of macro: BACKGROUND
52    						 MCT_END
52     >> start of macro: MCT_END
1+    	 0000				    .dw __prekickEP__
	 0000	 00000000	 
2+    	 0001				    .dw __postkickEP__
	 0001	 00000000	 
3+    	 0002				    .dw __timerEP__
	 0002	 00000000	 
4+    	 0003				    .dw __frameEP__
	 0003	 00000000	 
5+    	 0004				    .dw __blockEP__
	 0004	 00000000	 
6+    	 0005				    .dw __afapEP__
	 0005	 00000000	 
7+    	 0006				    .dw __backgroundEP__
	 0006	 00000000	 
8+    	 0007				    .dw __postmallocEP__
	 0007	 00000000	 
9+    	 0008				    .dw __premallocEP__
	 0008	 00000000	 
10+    >> end of macro: MCT_END
53    						
54    						(null)
				 SYMBOL TABLE 

    Name                                                                                    Type                  Value 

MCT_SIZE                                                                        			  Unused Number				      9 (9H)
MIF_SIZE                                                                        			  Unused Number				      8 (8H)
X_BY_mdl_code_prj_MIF                                                           			  Public Relocatable       mdl_code_prj_mif:0000H
X_S_mdl_code_prj_Background                                                     					 External   
X_S_mdl_code_prj_Brick                                                          					 External   
X_S_mdl_code_prj_Frame                                                          					 External   
X_S_mdl_code_prj_PostKickstart                                                  					 External   
X_S_mdl_code_prj_PostMalloc                                                     					 External   
X_S_mdl_code_prj_PreKickstart                                                   					 External   
X_S_mdl_code_prj_PreMalloc                                                      					 External   
X_S_mdl_code_prj_Timer                                                          					 External   
_COMMON_INC_PATH_                                                               					 Define                 "C:/CirrusDSP/CS48L2X/common/inc/"
_LOCAL_INC_PATH_                                                                					 Define                 "inc/"
_LOCAL_SRC_PATH_                                                                					 Define                 "src/"
_MCT_MACROS_H_                                                                  			  Unused Variable		        0 (1H)
_ROUTER_INC_PATH_                                                               					 Define                 "rom_inc/"
__CASM_VERSION__                                                                					 Float		              6.7 
__CASM_VER__                                                                    			  Unused Variable		        0 (701H)
__External_MCT__                                                                					 Variable		            0 (0H)
__External_MCV_X__                                                              					 Variable		            0 (0H)
__External_MCV_Y__                                                              					 Variable		            0 (0H)
__Internal_MCT__                                                                					 Variable		            0 (0H)
__Internal_MCV_X__                                                              					 Variable		            0 (0H)
__Internal_MCV_Y__                                                              					 Variable		            0 (0H)
___SegStart_Y_OVLY_mdl_code_prj_MCT                                             			  Unused Relocatable        mdl_code_prj_MCT:0000H
___SegStart_Y_OVLY_mdl_code_prj_mif                                             			  Unused Relocatable        mdl_code_prj_mif:0000H
__afapEP__                                                                      					 Variable		            0 (0H)
__backgroundEP__                                                                					 Variable		            0 (0H)
__blockEP__                                                                     					 Variable		            0 (0H)
__frameEP__                                                                     					 Variable		            0 (0H)
__postkickEP__                                                                  					 Variable		            0 (0H)
__postmallocEP__                                                                					 Variable		            0 (0H)
__prekickEP__                                                                   					 Variable		            0 (0H)
__premallocEP__                                                                 					 Variable		            0 (0H)
__timerEP__                                                                     					 Variable		            0 (0H)
mct                                                                             			         Relocatable         mdl_code_prj_MCT:0000H
mdl_code_prj_HOST_MCV                                                           					 External   
mdl_code_prj_MCT                                                                			  Unused Relocatable        mdl_code_prj_MCT:0000H
mdl_code_prj_MODULEID                                                           			  Unused Number				      116 (74H)
mdl_code_prj_mif                                                                			  Public Relocatable       mdl_code_prj_mif:0000H

	       SEGMENTS:

Size			  Name										 Class
0000H	 __INIT                                  			 CODE                                    
0008H	 mdl_code_prj_mif                        			 Y_OVLY                                  
0009H	 mdl_code_prj_MCT                        			 Y_OVLY                                  
